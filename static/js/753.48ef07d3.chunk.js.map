{"version":3,"file":"static/js/753.48ef07d3.chunk.js","mappings":"kKACA,GAAgB,QAAU,yBAAyB,KAAO,sBAAsB,OAAS,yB,6CCM1E,SAASA,IACtB,OAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAwCF,EAAAA,EAAAA,WAAS,GAAjD,eAAOG,EAAP,KAAqBC,EAArB,KAMA,GAAsBJ,EAAAA,EAAAA,UAAS,IAA/B,eAAOK,EAAP,KAAYC,EAAZ,KACA,GAAoCN,EAAAA,EAAAA,WAAS,GAA7C,eAAOO,EAAP,KAAmBC,EAAnB,KAMA,GAA8BR,EAAAA,EAAAA,UAAS,IAAvC,eAAOS,EAAP,KAAgBC,EAAhB,KACA,GAA4CV,EAAAA,EAAAA,WAAS,GAArD,eAAOW,EAAP,KAAuBC,EAAvB,KA4BA,OACE,iBAAKC,UAAWC,EAAAA,QAAiBC,GAAG,UAApC,WACE,UAAC,KAAD,YACE,iEACA,iBAAMC,KAAK,OAAOC,QAAQ,qCAE5B,SAACC,EAAA,EAAD,CAAQC,MAAO,uBACf,kBAAMC,YAAU,EAACP,UAAWQ,EAAAA,QAAgBC,SA7B3B,SAACC,GACpBA,EAAMC,iBAENpB,GAAgB,GAEhBI,GAAc,GAEdI,GAAkB,GAEJ,KAAVX,GAAgBwB,EAAAA,SAAwBxB,KAC1CyB,QAAQC,IAAItB,GACZqB,QAAQC,IAAI1B,GACZyB,QAAQC,IAAIlB,GAEZP,EAAS,IACTE,GAAgB,GAChBE,EAAO,IACPE,GAAc,GACdE,EAAW,IACXE,GAAkB,KAUlB,WACE,6CAEE,kBACEgB,KAAK,OACLC,MAAOxB,EACPyB,SA/Ca,SAACP,GACtBjB,EAAOiB,EAAMQ,cAAcF,OAC3BrB,GAAc,IA8CNwB,YAAY,mBAGfzB,GAAsB,KAARF,IACb,gBAAKQ,UAAWQ,EAAAA,OAAhB,8BAEDlB,IAAiBsB,EAAAA,SAAwBxB,KACxC,gBAAKY,UAAWQ,EAAAA,OAAhB,mCAEF,uCAEE,kBACEO,KAAK,QACLC,MAAO5B,EACP6B,SArEe,SAACP,GACxBrB,EAASqB,EAAMQ,cAAcF,OAC7BzB,GAAgB,IAoER4B,YAAY,qBAGf7B,GAA0B,KAAVF,IACf,gBAAKY,UAAWQ,EAAAA,OAAhB,gCAEDlB,IAAiBsB,EAAAA,SAAwBxB,KACxC,gBAAKY,UAAWQ,EAAAA,OAAhB,+CAGF,+CAEE,kBACEO,KAAK,UACLC,MAAOpB,EACPqB,SAvEiB,SAACP,GAC1Bb,EAAWa,EAAMQ,cAAcF,OAC/BjB,GAAkB,IAsEVoB,YAAY,uBAGfrB,GAA8B,KAAZF,IACjB,gBAAKI,UAAWQ,EAAAA,OAAhB,gCAGF,kBAAOO,KAAK,SAASC,MAAM,oC,kBCrGnC,IAAII,EAAS,iIAKbC,EAAQC,SAAW,SAASlC,GAE3B,IAAKA,EACJ,OAAO,EAER,GAAGA,EAAMmC,OAAO,IACf,OAAO,EAGR,IADYH,EAAOI,KAAKpC,GAEvB,OAAO,EAGR,IAAIqC,EAAQrC,EAAMsC,MAAM,KACxB,QAAGD,EAAM,GAAGF,OAAO,MAGDE,EAAM,GAAGC,MAAM,KAClBC,MAAK,SAASC,GAAQ,OAAOA,EAAKL,OAAO","sources":["webpack://smportfo/./src/pages/Contact.module.css?00cb","pages/Contact.jsx","../node_modules/email-validator/index.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"Contact\":\"Contact_Contact__5bU6R\",\"form\":\"Contact_form__22oAo\",\"erreur\":\"Contact_erreur__srX6F\"};","import Classes from \"./Contact.module.css\";\r\nimport { useState } from \"react\";\r\nimport emailValidator from \"email-validator\";\r\nimport styles from \"./Contact.module.css\";\r\nimport { Helmet } from \"react-helmet-async\";\r\nimport Header from \"../components/Header\";\r\n\r\nexport default function Contact() {\r\n  const [email, setemail] = useState(\"\");\r\n  const [emailTouched, setemailTouched] = useState(false);\r\n  const handleInputemail = (event) => {\r\n    setemail(event.currentTarget.value);\r\n    setemailTouched(true);\r\n  };\r\n\r\n  const [nom, setNom] = useState(\"\");\r\n  const [nomTouched, setNomTouched] = useState(false);\r\n  const handleInputNom = (event) => {\r\n    setNom(event.currentTarget.value);\r\n    setNomTouched(true);\r\n  };\r\n\r\n  const [message, setMessage] = useState(\"\");\r\n  const [messageTouched, setMessageTouched] = useState(false);\r\n  const handleInputMessage = (event) => {\r\n    setMessage(event.currentTarget.value);\r\n    setMessageTouched(true);\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    setemailTouched(true);\r\n\r\n    setNomTouched(true);\r\n\r\n    setMessageTouched(true);\r\n\r\n    if (email !== \"\" && emailValidator.validate(email)) {\r\n      console.log(nom);\r\n      console.log(email);\r\n      console.log(message);\r\n\r\n      setemail(\"\");\r\n      setemailTouched(false);\r\n      setNom(\"\");\r\n      setNomTouched(false);\r\n      setMessage(\"\");\r\n      setMessageTouched(false);\r\n    }\r\n  };\r\n  return (\r\n    <div className={Classes.Projets} id=\"Projet2\">\r\n      <Helmet>\r\n        <title>Contact - Portfolio Mahmoud SAIB</title>\r\n        <meta name=\"desc\" content=\"Contact info de Mahmoud SAIB\" />\r\n      </Helmet>\r\n      <Header title={\"Pour me contacter\"}></Header>\r\n      <form noValidate className={styles.Contact} onSubmit={handleSubmit}>\r\n        <label>\r\n          Nom complet:\r\n          <input\r\n            type=\"text\"\r\n            value={nom}\r\n            onChange={handleInputNom}\r\n            placeholder=\"Votre nom..\"\r\n          />\r\n        </label>\r\n        {nomTouched && nom === \"\" && (\r\n          <div className={styles.erreur}>Entrez votre nom</div>\r\n        )}\r\n        {emailTouched && !emailValidator.validate(email) && (\r\n          <div className={styles.erreur}>Entrez un nom valide</div>\r\n        )}\r\n        <label>\r\n          email:\r\n          <input\r\n            type=\"email\"\r\n            value={email}\r\n            onChange={handleInputemail}\r\n            placeholder=\"Votre email..\"\r\n          />\r\n        </label>\r\n        {emailTouched && email === \"\" && (\r\n          <div className={styles.erreur}>Entrez votre email</div>\r\n        )}\r\n        {emailTouched && !emailValidator.validate(email) && (\r\n          <div className={styles.erreur}>entrez une adresse email valide.</div>\r\n        )}\r\n\r\n        <label>\r\n          Votre message:\r\n          <input\r\n            type=\"message\"\r\n            value={message}\r\n            onChange={handleInputMessage}\r\n            placeholder=\"Votre message..\"\r\n          />\r\n        </label>\r\n        {messageTouched && message === \"\" && (\r\n          <div className={styles.erreur}>Ecrire un message</div>\r\n        )}\r\n\r\n        <input type=\"submit\" value=\"Soummetre votre demande\" />\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","\"use strict\";\r\n\r\nvar tester = /^[-!#$%&'*+\\/0-9=?A-Z^_a-z{|}~](\\.?[-!#$%&'*+\\/0-9=?A-Z^_a-z`{|}~])*@[a-zA-Z0-9](-*\\.?[a-zA-Z0-9])*\\.[a-zA-Z](-?[a-zA-Z0-9])+$/;\r\n// Thanks to:\r\n// http://fightingforalostcause.net/misc/2006/compare-email-regex.php\r\n// http://thedailywtf.com/Articles/Validating_Email_Addresses.aspx\r\n// http://stackoverflow.com/questions/201323/what-is-the-best-regular-expression-for-validating-email-addresses/201378#201378\r\nexports.validate = function(email)\r\n{\r\n\tif (!email)\r\n\t\treturn false;\r\n\t\t\r\n\tif(email.length>254)\r\n\t\treturn false;\r\n\r\n\tvar valid = tester.test(email);\r\n\tif(!valid)\r\n\t\treturn false;\r\n\r\n\t// Further checking of some things regex can't handle\r\n\tvar parts = email.split(\"@\");\r\n\tif(parts[0].length>64)\r\n\t\treturn false;\r\n\r\n\tvar domainParts = parts[1].split(\".\");\r\n\tif(domainParts.some(function(part) { return part.length>63; }))\r\n\t\treturn false;\r\n\r\n\treturn true;\r\n}"],"names":["Contact","useState","email","setemail","emailTouched","setemailTouched","nom","setNom","nomTouched","setNomTouched","message","setMessage","messageTouched","setMessageTouched","className","Classes","id","name","content","Header","title","noValidate","styles","onSubmit","event","preventDefault","emailValidator","console","log","type","value","onChange","currentTarget","placeholder","tester","exports","validate","length","test","parts","split","some","part"],"sourceRoot":""}